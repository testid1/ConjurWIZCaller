#Code to be triggered from Platform team#
name: Platform Source Code
permissions:
  id-token: write
  contents: read
on:
  workflow_dispatch:
jobs:
  workflow-1:
    name:  Workflow 1
    uses: testid1/ConjurWIZ/.github/workflows/reusable.yaml@main
    with:
      CONJUR_ORG_VARIABLE_PATH: "data/vault/conjurtest/conjurtest/username"
    secrets: 
      CONJUR_API_KEY: ${{ secrets.CONJUR_API_KEY }}

  workflow-2:
    name: Workflow 2
    uses: testid1/ConjurWIZ/.github/workflows/reusable.yaml@main
    with:
      CONJUR_ORG_VARIABLE_PATH: "data/vault/conjurtest/conjurtest/password"
    secrets: 
      CONJUR_API_KEY: ${{ secrets.CONJUR_API_KEY }}
  
  workflow-3:
    name: Workflow 3
    uses: testid1/ConjurWIZ/.github/workflows/reusable.yaml@main
    with:
      CONJUR_ORG_VARIABLE_PATH: "data/vault/conjurtest/conjurtest/address"
    secrets: 
      CONJUR_API_KEY: ${{ secrets.CONJUR_API_KEY }}
  
  use-WIZ_CLIENT_SECRET:
    name: Use WIZ_CLIENT_SECRET
    runs-on: ubuntu-latest
    needs: [workflow-1, workflow-2, workflow-3]
    steps:    

      - name: Write wiz secrets to file
        run: |
          set +x
          SECRET1="$(printf "%s" "$secrt1" | base64 -d)"
          echo "$SECRET1"
          echo "Token length: $(printf "%s" "$SECRET1" | wc -c)"

          set +x
          SECRET2="$(printf "%s" "$secrt2" | base64 -d)"
          echo "$SECRET2"
          echo "Token length: $(printf "%s" "$SECRET2" | wc -c)"          

          set +x
          SECRET3="$(printf "%s" "$secrt3" | base64 -d)"
          echo "$SECRET3"
          echo "Token length: $(printf "%s" "$SECRET3" | wc -c)"
    env:
      secrt1: ${{ needs.workflow-1.outputs.wiz_client_secret }}
      secrt2: ${{ needs.workflow-2.outputs.wiz_client_secret }}
      secrt3: ${{ needs.workflow-3.outputs.wiz_client_secret }}
#          echo "$SECRET"
#      - name: Mask wiz secrets to file
#        run: |
#          set +x
#          echo "::add-mask::$secrt"        




#          echo "$secrt"
#          echo "Len(S1)=${#secrt}"
#          printf "%s" "$secrt" | shasum -a 256 | cut -d' ' -f1
       

#          mycli auth --token "$secrt"
#          S1=${{ needs.workflow-1.outputs.wiz_client_secret }}
#          echo "Len(S1)=${#S1}"
#         S1=${{ needs.workflow-1.outputs.wiz_client_secret }}           
 #     - name: Mask wiz secrets to file
 #       run: |
 #         set +x
 #         echo "::add-mask::${{ needs.workflow-1.outputs.wiz_client_secret }}"  
#          echo "::add-mask::$S1" 
